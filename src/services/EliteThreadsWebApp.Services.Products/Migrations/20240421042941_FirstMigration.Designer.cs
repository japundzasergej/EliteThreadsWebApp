// <auto-generated />
using System;
using EliteThreadsWebApp.Services.Products.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EliteThreadsWebApp.Services.Products.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240421042941_FirstMigration")]
    partial class FirstMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EliteThreadsWebApp.Services.Products.Domain.Entities.Categories", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            CategoryName = "Clothing"
                        },
                        new
                        {
                            CategoryId = 2,
                            CategoryName = "Accessories"
                        },
                        new
                        {
                            CategoryId = 3,
                            CategoryName = "Shoes"
                        });
                });

            modelBuilder.Entity("EliteThreadsWebApp.Services.Products.Domain.Entities.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Compositions")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fabric")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Length")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("MustHave")
                        .HasColumnType("bit");

                    b.Property<bool>("New")
                        .HasColumnType("bit");

                    b.Property<string>("Pattern")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<string>("ProductDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Rating")
                        .HasColumnType("real");

                    b.Property<int>("SubcategoryId")
                        .HasColumnType("int");

                    b.HasKey("ProductId");

                    b.HasIndex("SubcategoryId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("EliteThreadsWebApp.Services.Products.Domain.Entities.Reviews", b =>
                {
                    b.Property<int>("ReviewId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReviewId"));

                    b.Property<DateOnly>("CreatedDate")
                        .HasColumnType("date");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ReviewId");

                    b.HasIndex("ProductId");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("EliteThreadsWebApp.Services.Products.Domain.Entities.Subcategories", b =>
                {
                    b.Property<int>("SubcategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SubcategoryId"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("SubcategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SubcategoryId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Subcategories");

                    b.HasData(
                        new
                        {
                            SubcategoryId = 1,
                            CategoryId = 1,
                            SubcategoryName = "Suits"
                        },
                        new
                        {
                            SubcategoryId = 2,
                            CategoryId = 1,
                            SubcategoryName = "Tuxedos"
                        },
                        new
                        {
                            SubcategoryId = 3,
                            CategoryId = 1,
                            SubcategoryName = "Blazers"
                        },
                        new
                        {
                            SubcategoryId = 4,
                            CategoryId = 1,
                            SubcategoryName = "Dress Shirts"
                        },
                        new
                        {
                            SubcategoryId = 5,
                            CategoryId = 1,
                            SubcategoryName = "Casual Shirts"
                        },
                        new
                        {
                            SubcategoryId = 6,
                            CategoryId = 1,
                            SubcategoryName = "Polo Shirts"
                        },
                        new
                        {
                            SubcategoryId = 7,
                            CategoryId = 1,
                            SubcategoryName = "Overshirts"
                        },
                        new
                        {
                            SubcategoryId = 8,
                            CategoryId = 1,
                            SubcategoryName = "Waistcoats"
                        },
                        new
                        {
                            SubcategoryId = 9,
                            CategoryId = 1,
                            SubcategoryName = "Knitwear"
                        },
                        new
                        {
                            SubcategoryId = 10,
                            CategoryId = 1,
                            SubcategoryName = "Jeans"
                        },
                        new
                        {
                            SubcategoryId = 11,
                            CategoryId = 1,
                            SubcategoryName = "Trousers"
                        },
                        new
                        {
                            SubcategoryId = 12,
                            CategoryId = 1,
                            SubcategoryName = "Outerwear"
                        },
                        new
                        {
                            SubcategoryId = 13,
                            CategoryId = 1,
                            SubcategoryName = "Sweatshirts and Joggers"
                        },
                        new
                        {
                            SubcategoryId = 14,
                            CategoryId = 1,
                            SubcategoryName = "Polo T-Shirts"
                        },
                        new
                        {
                            SubcategoryId = 15,
                            CategoryId = 1,
                            SubcategoryName = "Bermuda"
                        },
                        new
                        {
                            SubcategoryId = 16,
                            CategoryId = 1,
                            SubcategoryName = "Underwear and Pajamas"
                        },
                        new
                        {
                            SubcategoryId = 17,
                            CategoryId = 1,
                            SubcategoryName = "Swim Shorts"
                        },
                        new
                        {
                            SubcategoryId = 18,
                            CategoryId = 2,
                            SubcategoryName = "Ties"
                        },
                        new
                        {
                            SubcategoryId = 19,
                            CategoryId = 2,
                            SubcategoryName = "Pocket Squares"
                        },
                        new
                        {
                            SubcategoryId = 20,
                            CategoryId = 2,
                            SubcategoryName = "Socks"
                        },
                        new
                        {
                            SubcategoryId = 21,
                            CategoryId = 2,
                            SubcategoryName = "Belts"
                        },
                        new
                        {
                            SubcategoryId = 22,
                            CategoryId = 2,
                            SubcategoryName = "Hats"
                        },
                        new
                        {
                            SubcategoryId = 23,
                            CategoryId = 2,
                            SubcategoryName = "Bow Ties"
                        },
                        new
                        {
                            SubcategoryId = 24,
                            CategoryId = 2,
                            SubcategoryName = "Cummerbunds"
                        },
                        new
                        {
                            SubcategoryId = 25,
                            CategoryId = 2,
                            SubcategoryName = "Cufflinks"
                        },
                        new
                        {
                            SubcategoryId = 26,
                            CategoryId = 2,
                            SubcategoryName = "Braces"
                        },
                        new
                        {
                            SubcategoryId = 27,
                            CategoryId = 2,
                            SubcategoryName = "Rucksacks and Suitcases"
                        },
                        new
                        {
                            SubcategoryId = 28,
                            CategoryId = 2,
                            SubcategoryName = "Sunglasses"
                        },
                        new
                        {
                            SubcategoryId = 29,
                            CategoryId = 2,
                            SubcategoryName = "Small Leather Goods"
                        },
                        new
                        {
                            SubcategoryId = 30,
                            CategoryId = 2,
                            SubcategoryName = "Beach Towels"
                        },
                        new
                        {
                            SubcategoryId = 31,
                            CategoryId = 3,
                            SubcategoryName = "Sneakers"
                        },
                        new
                        {
                            SubcategoryId = 32,
                            CategoryId = 3,
                            SubcategoryName = "Loafers"
                        },
                        new
                        {
                            SubcategoryId = 33,
                            CategoryId = 3,
                            SubcategoryName = "Classic"
                        },
                        new
                        {
                            SubcategoryId = 34,
                            CategoryId = 3,
                            SubcategoryName = "Flip Flops"
                        });
                });

            modelBuilder.Entity("EliteThreadsWebApp.Services.Products.Domain.Entities.Product", b =>
                {
                    b.HasOne("EliteThreadsWebApp.Services.Products.Domain.Entities.Subcategories", "Subcategories")
                        .WithMany()
                        .HasForeignKey("SubcategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Subcategories");
                });

            modelBuilder.Entity("EliteThreadsWebApp.Services.Products.Domain.Entities.Reviews", b =>
                {
                    b.HasOne("EliteThreadsWebApp.Services.Products.Domain.Entities.Product", "Products")
                        .WithMany("Reviews")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Products");
                });

            modelBuilder.Entity("EliteThreadsWebApp.Services.Products.Domain.Entities.Subcategories", b =>
                {
                    b.HasOne("EliteThreadsWebApp.Services.Products.Domain.Entities.Categories", "Categories")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categories");
                });

            modelBuilder.Entity("EliteThreadsWebApp.Services.Products.Domain.Entities.Product", b =>
                {
                    b.Navigation("Reviews");
                });
#pragma warning restore 612, 618
        }
    }
}
